# Default values for helm bootssearch
# This is a YAML-formatted file.
# Declare variables to be passed into your templates. bootssearchservice ##
namespace: cep-app-dev-v2
replicaCount: 1

image:
  repository: gcpdevacr.azurecr.io/digital/dotcom/bootssearchservice
  tag: hf_1
  pullPolicy: IfNotPresent

imagePullSecrets:
- name: "gcpdev01aksacr"
nameOverride: ""
fullnameOverride: ""

initImage:
  repository: "gcpdevacr.azurecr.io/cep/extras/boots-busybox:v1"
  tag: "latest"
  pullPolicy: "Always"
  name: "cep-busybox"
  #command: [ "initContainers:"  "chown -R" - "dhpappuser:dhpappuser"  - "/deployments"]

JavaOpts: "-Xms2048m -Xmx4096m"
UsePodSecurityContext: true
RunAsUser: 1000
FsGroup: 1000

#resources:
#  requests:
#     cpu: "1"
#     memory: "2048Mi"
#  limits:
#     cpu: "2"
#     memory: "4096Mi"

resources:
  limits:
    cpu: 2
    memory: "4096Mi"
  requests:
    cpu: 1
    memory: "2048Mi"

autoscaling:
  enabled: true
  targetCPUUtilizationPercentage: "80"
  targetMemoryUtilizationPercentage: "80"
  minReplicas: "1"
  maxReplicas: "2"

service:
  annotations: {service.beta.kubernetes.io/azure-load-balancer-internal: "true"}
  clusterIP: ""
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  type: LoadBalancer
  port: 8080
  nodePort: ""

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

#resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.##
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

NetworkPolicy:
  # Enable creation of NetworkPolicy resources.
  Enabled: false
  # For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'
  # For Kubernetes v1.7, use 'networking.k8s.io/v1'
  ApiVersion: extensions/v1beta1

## Install Default RBAC roles and bindings
rbac:
  install: false
  serviceAccountName: default
  # RBAC api version (currently either v1, v1beta1, or v1alpha1)
  apiVersion: v1
  # Role reference
  roleRef: cluster-admin
  # Role kind (RoleBinding or ClusterRoleBinding)
  roleBindingKind: ClusterRoleBinding

##App Services
bootssearchservice:
  host: 192.200.124.179
  port: 9200
  history: 10
  logsize: 100

extraInitContainers: true
#xtraInitContainers: |

extraVolumeMounts: true
volumeMounts:
  configMountPath: "/deployments/config"
  configName: "bootssearchservice"
  appMountPath: "/deployments/logs"
  logName: "applogs"
  cacheMountPath: "/deployments/cache/app"
  cacheName: "appcache"

extraVolume: true
extraHostPath: true
volume:
 defaultMode: 420
 name: bootssearchservice-config
 configName: bootssearchservice
 hostCachePath: "/tmp/cache/app"
 hostCachePathType: ""
 hostCachePathName: appcache
 hostLogPath: "/appdata/disk1/logs"
 hostLogPathType: ""
 hostLogPathName: applogs

securityContextEnable: true
securityContext:
  privileged: true
  procMount: "Default"

extraAgrs: true
args: "java -jar /usr/local/ecomm/app/bootssearchservice.jar --spring.config.additional-location=/deployments/config/config.yaml,/deployments/config/bootstrap.yaml"
